{"version":3,"sources":["components/FilmCard/FilmCard.js","store/index.js","store/redux.js","components/FilmsList/FilmsList.js","components/FormField/FormField.js","validation.js","components/NewFilm/NewFilm.js","components/FilmDetails/FilmDetails.js","App.js","index.js"],"names":["FilmCard","props","title","description","imgUrl","imdbUrl","id","react_default","a","createElement","react_router_dom","to","concat","className","src","alt","href","defaultProps","ACTION_TYPES","ADD_NEW_FILM","addNewFilm","film","type","payload","initialState","films","store","reducer","state","listeners","getState","dispatch","action","forEach","listener","subscribe","cb","Error","push","filter","createStore","arguments","length","undefined","_objectSpread","Object","toConsumableArray","FilmsList","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","inherits","createClass","key","value","_this2","setState","map","FilmCard_FilmCard_FilmCard","assign","Component","FormField","memo","error","name","label","onChange","placeholder","inputClass","cx","is-danger","controlClass","has-icons-right","Control","htmlFor","required","formValidators","NewFilm","handleChange","_ref","_ref$target","target","prevState","defineProperty","handleSubmit","event","preventDefault","onAdd","formValue","getFormValue","_this$validate","validate","hasError","errors","newState","_ref3","_ref4","slicedToArray","fromEntries","entries","reduce","acc","entry","NewFilm_objectSpread","_ref5","_ref6","fieldData","validator","some","errorData","_this$state","onSubmit","FormField_FormField","FilmDetails","findFilm","match","find","String","params","console","log","API_URL","App","searchWord","handleAddFilm","newFilm","handleSearchChange","searchFilm","fetch","then","response","json","data","Title","Plot","Poster","Website","imdbID","onClick","react_router","exact","path","component","NewFilm_NewFilm","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.6dbc571d.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './FilmCard.scss';\nimport { Link } from 'react-router-dom';\n\nexport const FilmCard = (props) => {\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    id,\n  } = props;\n\n  return (\n    <Link to={`/film/${id}`} className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-4\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <p href={imdbUrl}>IMDB</p>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nFilmCard.propTypes = {\n  title: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string,\n  imdbUrl: PropTypes.string,\n};\n\nFilmCard.defaultProps = {\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  title: '',\n};\n","import { createStore } from './redux';\n\nconst ACTION_TYPES = {\n  ADD_NEW_FILM: 'FILM::ADD',\n};\n\nexport const addNewFilm = film => ({\n  type: ACTION_TYPES.ADD_NEW_FILM,\n  payload: film,\n});\n\nconst initialState = {\n  films: [],\n};\n\nfunction reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ACTION_TYPES.ADD_NEW_FILM: {\n      return {\n        ...state,\n        films: [...state.films, action.payload],\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(reducer);\n\n// console.log('STATE', store.getState());\n//\n// const unsubscribe1 = store.subscribe((state) => {\n//   console.log(state.films.map(({ title }) => title));\n// });\n//\n// store.dispatch(addNewFilm({ title: 'Avengers' }));\n//\n// store.subscribe((state) => {\n//   console.log(state.films);\n// });\n// unsubscribe1();\n//\n// store.dispatch(addNewFilm({ title: 'Spider-Man' }));\n//\n// console.log('STATE', store.getState());\n","export function createStore(reducer) {\n  let state = reducer();\n  let listeners = [];\n\n  return {\n    getState() {\n      return state;\n    },\n    dispatch(action) {\n      state = reducer(state, action);\n\n      listeners.forEach(listener => listener(state));\n    },\n    subscribe(cb) {\n      if (typeof cb !== 'function') {\n        throw new Error('Callback should be a function');\n      }\n\n      listeners.push(cb);\n\n      return () => {\n        listeners = listeners\n          .filter(listener => listener !== cb);\n      };\n    },\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './FilmsList.scss';\nimport { FilmCard } from '../FilmCard';\nimport { store } from '../../store';\n\nexport class FilmsList extends Component {\n  state = {\n    films: store.getState().films,\n  }\n\n  componentDidMount() {\n    store.subscribe(() => {\n      this.setState({\n        films: store.getState().films,\n      });\n    });\n  }\n\n  render() {\n    const { films } = this.state;\n\n    return (\n      <div className=\"films\">\n        {films.map(film => (\n          <FilmCard key={film.id} {...film} />\n        ))}\n      </div>\n    );\n  }\n}\n\nFilmsList.propTypes = {\n  films: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n  })),\n};\n\nFilmsList.defaultProps = {\n  films: [],\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './FormField.scss';\n\nexport const FormField = memo((props) => {\n  /* eslint-disable */\n  const {\n    error,\n    name,\n    label,\n    type,\n    onChange,\n    placeholder,\n    value,\n  } = props;\n  /* eslint-enable */\n\n  const inputClass = cx('input', { 'is-danger': !!error });\n  const controlClass = cx('control', { 'has-icons-right': !!error });\n\n  const Control = type === 'textarea' ? type : 'input';\n\n  return (\n    <div className=\"field\">\n      <label htmlFor={name} className=\"label\">\n        {label}\n      </label>\n      <div className={controlClass}>\n        <Control\n          name={name}\n          id={name}\n          className={inputClass}\n          type={type}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n        {error && (\n          <span className=\"icon is-small is-right\">\n            <i className=\"fas fa-exclamation-triangle\" />\n          </span>\n        )}\n      </div>\n\n      {error && (\n        <p className=\"help is-danger\">{error}</p>\n      )}\n    </div>\n  );\n});\n\nFormField.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  error: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nFormField.defaultProps = {\n  error: '',\n  type: 'text',\n  placeholder: 'Type text here',\n};\n","export const required = (name, value) => {\r\n  return value\r\n    ? null\r\n    : `Field ${name} is required`;\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormField } from '../FormField';\r\nimport { required } from '../../validation';\r\n\r\nconst initialState = {\r\n  title: {\r\n    value: '',\r\n    error: null,\r\n  },\r\n  description: {\r\n    value: '',\r\n    error: null,\r\n  },\r\n  imgUrl: {\r\n    value: '',\r\n    error: null,\r\n  },\r\n  imdbUrl: {\r\n    value: '',\r\n    error: null,\r\n  },\r\n};\r\n\r\nconst formValidators = {\r\n  title: required,\r\n  imgUrl: required,\r\n  imdbUrl: required,\r\n};\r\n\r\nexport class NewFilm extends Component {\r\n  state = initialState;\r\n\r\n  getFormValue() {\r\n    return Object.entries(this.state)\r\n      .reduce((acc, entry) => ({\r\n        ...acc,\r\n        [entry[0]]: entry[1].value,\r\n      }), {});\r\n  }\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState(prevState => ({\r\n      [name]: {\r\n        value,\r\n        error: prevState[name].error,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { onAdd } = this.props;\r\n    const formValue = this.getFormValue();\r\n\r\n    const { hasError, errors } = this.validate();\r\n\r\n    if (hasError) {\r\n      this.setState((prevState) => {\r\n        const newState = errors.map(([name, error]) => {\r\n          return [\r\n            name,\r\n            {\r\n              error,\r\n              value: prevState[name].value,\r\n            },\r\n          ];\r\n        });\r\n\r\n        return Object.fromEntries(newState);\r\n      });\r\n    } else {\r\n      this.setState(initialState);\r\n      onAdd(formValue);\r\n    }\r\n  };\r\n\r\n  validate() {\r\n    const errors = Object.entries(this.state)\r\n      .map(([name, fieldData]) => {\r\n        const validator = formValidators[name];\r\n        const error = validator\r\n          ? validator(name, fieldData.value)\r\n          : null;\r\n\r\n        return [name, error];\r\n      });\r\n\r\n    const hasError = errors\r\n      .some(errorData => !!errorData[1]);\r\n\r\n    return {\r\n      hasError,\r\n      errors,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      description,\r\n      imgUrl,\r\n      imdbUrl,\r\n    } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <FormField\r\n          {...title}\r\n          name=\"title\"\r\n          placeholder=\"Input film title\"\r\n          label=\"Title\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <FormField\r\n          {...description}\r\n          type=\"textarea\"\r\n          name=\"description\"\r\n          placeholder=\"Input film description\"\r\n          label=\"Description\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <FormField\r\n          {...imgUrl}\r\n          name=\"imgUrl\"\r\n          placeholder=\"Paste image url\"\r\n          label=\"Image url\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <FormField\r\n          {...imdbUrl}\r\n          name=\"imdbUrl\"\r\n          placeholder=\"Paste IMDB url\"\r\n          label=\"IMDB url\"\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"button is-primary\"\r\n        >\r\n          Add film\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nNewFilm.propTypes = {\r\n  onAdd: PropTypes.func.isRequired,\r\n};\r\n","/* eslint-disable max-len */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { store } from '../../store';\n\nexport class FilmDetails extends Component {\n  state = {\n    film: this.findFilm(),\n  }\n\n  componentDidMount() {\n    store.subscribe(() => {\n    });\n  }\n\n  componentWillUnmount() {\n    store.subscribe(() => {\n    });\n  }\n\n  findFilm = () => {\n    const { match } = this.props;\n    const { films } = this.store.getState();\n\n    return films.find(film => String(film.id) === match.params.id);\n  }\n\n  render() {\n    const { film } = this.state;\n    const {\n      imgUrl, description, title, imdbUrl,\n    } = film;\n    console.log('filmfilmfilmfilmfilmfilmfilmfilm', film);\n    return (\n      <div className=\"card\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={imgUrl}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-4\">{title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            {description}\n            <br />\n            <a href={imdbUrl}>IMDB</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFilmDetails.propTypes = {\n  match: PropTypes.string.isRequired,\n};\n\nFilmDetails.defaultProps = {\n};\n","import React, { Component } from 'react';\nimport './App.scss';\n\nimport {\n  HashRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport { FilmsList } from './components/FilmsList';\nimport { NewFilm } from './components/NewFilm';\nimport { store, addNewFilm } from './store/index';\nimport { FormField } from './components/FormField';\nimport { FilmDetails } from './components/FilmDetails';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=2f4a38c9&t=';\n\nexport class App extends Component {\n  state = {\n    searchWord: '',\n  };\n\n  componentDidMount() {\n    this.searchFilm('spider');\n  }\n\n  handleAddFilm = (newFilm) => {\n    store.dispatch(addNewFilm(newFilm));\n  };\n\n  handleSearchChange = ({ target }) => {\n    this.setState({ searchWord: target.value });\n  };\n\n  searchFilm = (searchWord) => {\n    fetch(`${API_URL}${searchWord}`)\n      .then(response => response.json())\n      .then((data) => {\n        const {\n          Title,\n          Plot,\n          Poster,\n          Website,\n          imdbID,\n        } = data;\n\n        const newFilm = {\n          id: imdbID,\n          title: Title,\n          description: Plot,\n          imgUrl: Poster,\n          imdbUrl: Website,\n        };\n\n        store.dispatch(addNewFilm(newFilm));\n      });\n  };\n\n  render() {\n    const { searchWord } = this.state;\n\n    return (\n      <HashRouter>\n        <div className=\"page\">\n          <div className=\"content\">\n            <div className=\"box\">\n              <FormField\n                value={searchWord}\n                name=\"searchWord\"\n                placeholder=\"Type search word\"\n                label=\"Search film\"\n                onChange={this.handleSearchChange}\n              />\n              <button\n                onClick={() => this.searchFilm(searchWord)}\n                type=\"button\"\n                className=\"button is-primary\"\n              >\n                Search film\n              </button>\n            </div>\n\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                component={FilmsList}\n              />\n              <Route\n                exact\n                path=\"/film/:id\"\n                component={FilmDetails}\n              />\n            </Switch>\n          </div>\n          <div className=\"sidebar\">\n            <NewFilm onAdd={this.handleAddFilm} />\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport 'bulma/css/bulma.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/FilmCard/FilmCard.js","store/index.js","store/redux.js","components/FilmsList/FilmsList.js","components/FormField/FormField.js","validation.js","components/NewFilm/NewFilm.js","components/FilmDetails/FilmDetails.js","App.js","index.js"],"names":["FilmCard","props","title","description","imgUrl","imdbUrl","id","react_default","a","createElement","react_router_dom","to","concat","className","src","alt","href","ACTION_TYPES","ADD_NEW_FILM","FIND_NEW_FILM","addNewFilm","film","type","payload","findNewFilm","initialState","films","store","reducer","state","listeners","getState","dispatch","action","forEach","listener","subscribe","cb","Error","push","filter","createStore","arguments","length","undefined","_objectSpread","Object","toConsumableArray","FilmsList","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","unsubscribe","inherits","createClass","key","value","_this2","setState","map","FilmCard_FilmCard_FilmCard","assign","React","Component","FormField","memo","error","name","label","onChange","placeholder","inputClass","cx","is-danger","controlClass","has-icons-right","Control","htmlFor","defaultProps","required","formValidators","NewFilm","_Component","handleChange","_ref","_ref$target","target","prevState","defineProperty","handleSubmit","event","preventDefault","onAdd","formValue","getFormValue","_this$validate","validate","hasError","errors","newState","_ref3","_ref4","slicedToArray","fromEntries","entries","reduce","acc","entry","NewFilm_objectSpread","_ref5","_ref6","fieldData","validator","some","errorData","_this$state","onSubmit","FormField_FormField","FilmDetails","find","String","match","params","console","log","_this$state$film","API_URL","App","searchWord","handleAddFilm","newFilm","handleSearchChange","searchFilm","fetch","then","response","json","data","Title","Plot","Poster","Website","imdbID","onClick","react_router","exact","path","component","NewFilm_NewFilm","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.cb29f162.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\nimport './FilmCard.scss';\nimport { Link } from 'react-router-dom';\n\nexport const FilmCard = (props) => {\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    id,\n  } = props;\n\n  return (\n    <Link to={`/film/${id}`} className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-4\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </Link>\n  );\n};\n","import { createStore } from './redux';\n\nconst ACTION_TYPES = {\n  ADD_NEW_FILM: 'FILM::ADD',\n  FIND_NEW_FILM: 'FILM::FIND',\n};\n\nexport const addNewFilm = film => ({\n  type: ACTION_TYPES.ADD_NEW_FILM,\n  payload: film,\n});\n\nexport const findNewFilm = film => ({\n  type: ACTION_TYPES.FIND_NEW_FILM,\n  payload: film,\n});\n\nconst initialState = {\n  films: [],\n};\n\nfunction reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ACTION_TYPES.ADD_NEW_FILM:\n      return {\n        ...state,\n        films: [...state.films, action.payload],\n      };\n    case ACTION_TYPES.FIND_NEW_FILM:\n      return {\n        ...state,\n        films: [...state.films, action.payload],\n      };\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(reducer);\n\nstore.dispatch(addNewFilm({\n  id: 1,\n  title: 'Groundhog Day',\n  description: 'A weatherman finds himself inexplicably living the same day over and over again.',\n  imgUrl: 'https://m.media-amazon.com/images/M/MV5BZWIxNzM5YzQtY2FmMS00Yjc3LWI1ZjUtNGVjMjMzZTIxZTIxXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SY1000_CR0,0,671,1000_AL_.jpg',\n  imdbUrl: 'https://www.imdb.com/title/tt0107048/',\n}));\n","export function createStore(reducer) {\n  let state = reducer();\n  let listeners = [];\n\n  return {\n    getState() {\n      return state;\n    },\n    dispatch(action) {\n      state = reducer(state, action);\n\n      listeners.forEach(listener => listener(state));\n    },\n    subscribe(cb) {\n      if (typeof cb !== 'function') {\n        throw new Error('Callback should be a function');\n      }\n\n      listeners.push(cb);\n\n      return () => {\n        listeners = listeners\n          .filter(listener => listener !== cb);\n      };\n    },\n  };\n}\n","import React from 'react';\nimport './FilmsList.scss';\nimport { FilmCard } from '../FilmCard';\nimport { store } from '../../store';\n\nexport class FilmsList extends React.Component {\n  state = {\n    films: store.getState().films,\n  }\n\n  unsubscribe = null\n\n  componentDidMount() {\n    this.unsubscribe = store\n      .subscribe(() => {\n        this.setState({\n          films: store.getState().films,\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const { films } = this.state;\n\n    return (\n      <div className=\"films\">\n        {films.map(film => (\n          <FilmCard key={film.id} {...film} />\n        ))}\n      </div>\n    );\n  }\n};\n\n\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './FormField.scss';\n\nexport const FormField = memo((props) => {\n  const {\n    error,\n    name,\n    label,\n    type,\n    onChange,\n    placeholder,\n    value,\n  } = props;\n\n  const inputClass = cx('input', { 'is-danger': !!error });\n  const controlClass = cx('control', { 'has-icons-right': !!error });\n\n  const Control = type === 'textarea' ? type : 'input';\n\n  return (\n    <div className=\"field\">\n      <label htmlFor={name} className=\"label\">\n        {label}\n      </label>\n      <div className={controlClass}>\n        <Control\n          name={name}\n          id={name}\n          className={inputClass}\n          type={type}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n        {error && (\n          <span className=\"icon is-small is-right\">\n            <i className=\"fas fa-exclamation-triangle\" />\n          </span>\n        )}\n      </div>\n\n      {error && (\n        <p className=\"help is-danger\">{error}</p>\n      )}\n    </div>\n  );\n});\n\nFormField.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  error: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nFormField.defaultProps = {\n  error: '',\n  type: 'text',\n  placeholder: 'Type text here',\n};\n","export const required = (name, value) => {\n  return value\n    ? null\n    : `Field ${name} is required`;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormField } from '../FormField';\nimport { required } from '../../validation';\n\nconst initialState = {\n  title: {\n    value: '',\n    error: null,\n  },\n  description: {\n    value: '',\n    error: null,\n  },\n  imgUrl: {\n    value: '',\n    error: null,\n  },\n  imdbUrl: {\n    value: '',\n    error: null,\n  },\n};\n\nconst formValidators = {\n  title: required,\n  imgUrl: required,\n  imdbUrl: required,\n};\n\nexport class NewFilm extends Component {\n  state = initialState;\n\n  getFormValue() {\n    return Object.entries(this.state)\n      .reduce((acc, entry) => ({\n        ...acc,\n        [entry[0]]: entry[1].value,\n      }), {});\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState(prevState => ({\n      [name]: {\n        value,\n        error: prevState[name].error,\n      },\n    }));\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { onAdd } = this.props;\n    const formValue = this.getFormValue();\n\n    const { hasError, errors } = this.validate();\n\n    if (hasError) {\n      this.setState((prevState) => {\n        const newState = errors.map(([name, error]) => {\n          return [\n            name,\n            {\n              error,\n              value: prevState[name].value,\n            },\n          ];\n        });\n\n        return Object.fromEntries(newState);\n      });\n    } else {\n      this.setState(initialState);\n      onAdd(formValue);\n    }\n  };\n\n  validate() {\n    const errors = Object.entries(this.state)\n      .map(([name, fieldData]) => {\n        const validator = formValidators[name];\n        const error = validator\n          ? validator(name, fieldData.value)\n          : null;\n\n        return [name, error];\n      });\n\n    const hasError = errors\n      .some(errorData => !!errorData[1]);\n\n    return {\n      hasError,\n      errors,\n    };\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormField\n          {...title}\n          name=\"title\"\n          placeholder=\"Input film title\"\n          label=\"Title\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...description}\n          type=\"textarea\"\n          name=\"description\"\n          placeholder=\"Input film description\"\n          label=\"Description\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imgUrl}\n          name=\"imgUrl\"\n          placeholder=\"Paste image url\"\n          label=\"Image url\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imdbUrl}\n          name=\"imdbUrl\"\n          placeholder=\"Paste IMDB url\"\n          label=\"IMDB url\"\n          onChange={this.handleChange}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"button is-primary\"\n        >\n          Add film\n        </button>\n      </form>\n    );\n  }\n}\n\nNewFilm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","/* eslint-disable max-len */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { store } from '../../store';\n\nexport class FilmDetails extends Component {\n  state = {\n    film: store.getState().films.find(film => String(film.id) === this.props.match.params.id),\n  }\n\n  unsubscribe = null\n\n  componentDidMount() {\n    this.unsubscribe = store.subscribe(() => {\n      this.setState({\n        film: store.getState().films.find(film => String(film.id) === this.props.match.params.id),\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    console.log(this.state.film);\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n    } = this.state.film;\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={imgUrl}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-4\">{title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            {description}\n            <br />\n            <a href={imdbUrl}>IMDB</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFilmDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { FilmsList } from './components/FilmsList';\nimport { NewFilm } from './components/NewFilm';\nimport { FormField } from './components/FormField';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport { FilmDetails } from './components/FilmDetails';\nimport { store, addNewFilm, findNewFilm } from './store';\n\nconst API_URL = 'http://www.omdbapi.com/?apikey=2f4a38c9&t=';\n\nexport class App extends Component {\n  state = {\n    searchWord: '',\n  };\n\n  componentDidMount() {\n    this.searchFilm('spider');\n  }\n\n  handleAddFilm = (newFilm) => {\n    store.dispatch(addNewFilm(newFilm));\n  };\n\n  handleSearchChange = ({ target }) => {\n    this.setState({ searchWord: target.value });\n  };\n\n  searchFilm = (searchWord) => {\n    fetch(`${API_URL}${searchWord}`)\n      .then(response => response.json())\n      .then((data) => {\n        const {\n          Title,\n          Plot,\n          Poster,\n          Website,\n          imdbID,\n        } = data;\n\n        const newFilm = {\n          id: imdbID,\n          title: Title,\n          description: Plot,\n          imgUrl: Poster,\n          imdbUrl: Website,\n        };\n\n        store.dispatch(findNewFilm(newFilm));\n      });\n  };\n\n  render() {\n    const { searchWord } = this.state;\n\n    return (\n      <BrowserRouter>\n        <div className=\"page\">\n          <div className=\"content\">\n            <div className=\"box\">\n              <FormField\n                value={searchWord}\n                name=\"searchWord\"\n                placeholder=\"Type search word\"\n                label=\"Search film\"\n                onChange={this.handleSearchChange}\n              />\n              <button\n                onClick={() => this.searchFilm(searchWord)}\n                type=\"button\"\n                className=\"button is-primary\"\n              >\n                Search film\n              </button>\n            </div>\n\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                component={FilmsList}\n              />\n              <Route\n                component={FilmDetails}\n                exact\n                path=\"/film/:id\"\n              />\n            </Switch>\n          </div>\n          <div className=\"sidebar\">\n            <NewFilm onAdd={this.handleAddFilm} />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
{"version":3,"sources":["components/FilmCard/FilmCard.js","store/index.js","store/redux.js","components/FilmsList/FilmsList.js","components/FormField/FormField.js","validation.js","components/NewFilm/NewFilm.js","components/FilmDetails/FilmDetails.js","App.js","index.js"],"names":["FilmCard","props","title","description","imgUrl","imdbUrl","id","react_default","a","createElement","react_router_dom","to","concat","className","src","alt","href","defaultProps","ACTION_TYPES","ADD_NEW_FILM","addNewFilm","film","type","payload","initialState","films","store","reducer","state","listeners","getState","dispatch","action","forEach","listener","subscribe","cb","Error","push","filter","createStore","arguments","length","undefined","_objectSpread","Object","toConsumableArray","FilmsList","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","unsubscribe","inherits","createClass","key","value","_this2","setState","map","FilmCard_FilmCard_FilmCard","assign","Component","FormField","memo","error","name","label","onChange","placeholder","inputClass","cx","is-danger","controlClass","has-icons-right","Control","htmlFor","required","formValidators","NewFilm","handleChange","_ref","_ref$target","target","prevState","defineProperty","handleSubmit","event","preventDefault","onAdd","formValue","getFormValue","_this$validate","validate","hasError","errors","newState","_ref3","_ref4","slicedToArray","fromEntries","entries","reduce","acc","entry","NewFilm_objectSpread","_ref5","_ref6","fieldData","validator","some","errorData","_this$state","onSubmit","FormField_FormField","FilmDetails","find","f","String","match","params","_this$state$film","_this$state$film$desc","API_URL","App","searchWord","handleAddFilm","newFilm","handleSearchChange","searchFilm","fetch","then","response","json","data","Title","Plot","Poster","Website","imdbID","onClick","react_router","exact","path","component","NewFilm_NewFilm","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.6ef9c8d5.chunk.js","sourcesContent":["/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FilmCard.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const FilmCard = (props) => {\r\n  const {\r\n    title,\r\n    description,\r\n    imgUrl,\r\n    imdbUrl,\r\n    id,\r\n  } = props;\r\n\r\n  return (\r\n    <Link to={`/film/${id}`} className=\"card\">\r\n      <div className=\"card-image\">\r\n        <figure className=\"image is-4by3\">\r\n          <img\r\n            src={imgUrl}\r\n            alt=\"Film logo\"\r\n          />\r\n        </figure>\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <div className=\"media\">\r\n          <div className=\"media-left\">\r\n            <figure className=\"image is-48x48\">\r\n              <img\r\n                src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\r\n                alt=\"imdb\"\r\n              />\r\n            </figure>\r\n          </div>\r\n          <div className=\"media-content\">\r\n            <p className=\"title is-4\">{title}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"content\">\r\n          {description}\r\n          <br />\r\n          <a href={imdbUrl}>IMDB</a>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nFilmCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nFilmCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import { createStore } from './redux';\n\nconst ACTION_TYPES = {\n  ADD_NEW_FILM: 'FILM::ADD',\n};\n\nexport const addNewFilm = film => ({\n  type: ACTION_TYPES.ADD_NEW_FILM,\n  payload: film,\n});\n\nconst initialState = {\n  films: [],\n};\n\nfunction reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ACTION_TYPES.ADD_NEW_FILM: {\n      return {\n        ...state,\n        films: [...state.films, {\n          ...action.payload,\n          id: state.films.length,\n        }],\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(reducer);\n","export function createStore(reducer) {\r\n  let state = reducer();\r\n  let listeners = [];\r\n\r\n  return {\r\n    getState() {\r\n      return state;\r\n    },\r\n    dispatch(action) {\r\n      state = reducer(state, action);\r\n\r\n      listeners.forEach(listener => listener(state));\r\n    },\r\n    subscribe(cb) {\r\n      if (typeof cb !== 'function') {\r\n        throw new Error('Callback should be a function');\r\n      }\r\n\r\n      listeners.push(cb);\r\n\r\n      return () => {\r\n        listeners = listeners\r\n          .filter(listener => listener !== cb);\r\n      };\r\n    },\r\n  };\r\n}\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './FilmsList.scss';\nimport { FilmCard } from '../FilmCard';\nimport { store } from '../../store/index';\n\nexport class FilmsList extends Component {\n  state = {\n    films: store.getState().films,\n  };\n\n  unsubscribe = null;\n\n  componentDidMount() {\n    this.unsubscribe = store\n      .subscribe(() => this.setState(({ films: store.getState().films })));\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const { films } = this.state;\n\n    return (\n      <div className=\"films\">\n        {films.map(film => (\n          <FilmCard key={film.id} {...film} />\n        ))}\n      </div>\n    );\n  }\n}\n\nFilmsList.propTypes = {\n  films: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n  })),\n};\n\nFilmsList.defaultProps = {\n  films: [],\n};\n","import React, { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'classnames';\r\nimport './FormField.scss';\r\n\r\nexport const FormField = memo((props) => {\r\n  const {\r\n    error,\r\n    name,\r\n    label,\r\n    type,\r\n    onChange,\r\n    placeholder,\r\n    value,\r\n  } = props;\r\n\r\n  const inputClass = cx('input', { 'is-danger': !!error });\r\n  const controlClass = cx('control', { 'has-icons-right': !!error });\r\n\r\n  const Control = type === 'textarea' ? type : 'input';\r\n\r\n  return (\r\n    <div className=\"field\">\r\n      <label htmlFor={name} className=\"label\">\r\n        {label}\r\n      </label>\r\n      <div className={controlClass}>\r\n        <Control\r\n          name={name}\r\n          id={name}\r\n          className={inputClass}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n        {error && (\r\n          <span className=\"icon is-small is-right\">\r\n            <i className=\"fas fa-exclamation-triangle\" />\r\n          </span>\r\n        )}\r\n      </div>\r\n\r\n      {error && (\r\n        <p className=\"help is-danger\">{error}</p>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nFormField.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string,\r\n  error: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nFormField.defaultProps = {\r\n  error: '',\r\n  type: 'text',\r\n  placeholder: 'Type text here',\r\n};\r\n","export const required = (name, value) => {\r\n  return value\r\n    ? null\r\n    : `Field ${name} is required`;\r\n};\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormField } from '../FormField';\nimport { required } from '../../validation';\n\nconst initialState = {\n  title: {\n    value: '',\n    error: null,\n  },\n  description: {\n    value: '',\n    error: null,\n  },\n  imgUrl: {\n    value: '',\n    error: null,\n  },\n  imdbUrl: {\n    value: '',\n    error: null,\n  },\n};\n\nconst formValidators = {\n  title: required,\n  imgUrl: required,\n  imdbUrl: required,\n};\n\nexport class NewFilm extends Component {\n  state = initialState;\n\n  getFormValue() {\n    return Object.entries(this.state)\n      .reduce((acc, entry) => ({\n        ...acc,\n        [entry[0]]: entry[1].value,\n      }), {});\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState(prevState => ({\n      [name]: {\n        value,\n        error: prevState[name].error,\n      },\n    }));\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { onAdd } = this.props;\n    const formValue = this.getFormValue();\n\n    const { hasError, errors } = this.validate();\n\n    if (hasError) {\n      this.setState((prevState) => {\n        const newState = errors.map(([name, error]) => ([\n          name,\n          {\n            error,\n            value: prevState[name].value,\n          },\n        ]));\n\n        return Object.fromEntries(newState);\n      });\n    } else {\n      this.setState(initialState);\n      onAdd(formValue);\n    }\n  };\n\n  validate() {\n    const errors = Object.entries(this.state)\n      .map(([name, fieldData]) => {\n        const validator = formValidators[name];\n        const error = validator\n          ? validator(name, fieldData.value)\n          : null;\n\n        return [name, error];\n      });\n\n    const hasError = errors\n      .some(errorData => !!errorData[1]);\n\n    return {\n      hasError,\n      errors,\n    };\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormField\n          {...title}\n          name=\"title\"\n          placeholder=\"Input film title\"\n          label=\"Title\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...description}\n          type=\"textarea\"\n          name=\"description\"\n          placeholder=\"Input film description\"\n          label=\"Description\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imgUrl}\n          name=\"imgUrl\"\n          placeholder=\"Paste image url\"\n          label=\"Image url\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imdbUrl}\n          name=\"imdbUrl\"\n          placeholder=\"Paste IMDB url\"\n          label=\"IMDB url\"\n          onChange={this.handleChange}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"button is-primary\"\n        >\n          Add film\n        </button>\n      </form>\n    );\n  }\n}\n\nNewFilm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","/* eslint-disable max-len */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { store } from '../../store/index';\n\nexport class FilmDetails extends Component {\n  state = {\n    film: store.getState().films\n      .find(f => String(f.id) === this.props.match.params.id),\n  };\n\n  render() {\n    const {\n      film: {\n        title,\n        description = '',\n        imgUrl,\n        imdbUrl,\n      },\n    } = this.state;\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={imgUrl}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-4\">{title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            {description}\n            <br />\n            <a href={imdbUrl}>IMDB</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFilmDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport './App.scss';\nimport { FilmsList } from './components/FilmsList';\nimport { NewFilm } from './components/NewFilm';\nimport { addNewFilm, store } from './store/index';\nimport { FormField } from './components/FormField';\nimport { FilmDetails } from './components/FilmDetails';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=2f4a38c9&t=';\n\nexport class App extends Component {\n  state = {\n    searchWord: '',\n  };\n\n  unsubscribe = null;\n\n  componentDidMount() {\n    this.searchFilm('spider');\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  handleAddFilm = (newFilm) => {\n    store.dispatch(addNewFilm(newFilm));\n  };\n\n  handleSearchChange = ({ target }) => {\n    this.setState({ searchWord: target.value });\n  };\n\n  searchFilm = (searchWord) => {\n    fetch(`${API_URL}${searchWord}`)\n      .then(response => response.json())\n      .then((data) => {\n        const {\n          Title,\n          Plot,\n          Poster,\n          Website,\n          imdbID,\n        } = data;\n\n        const newFilm = {\n          id: imdbID,\n          title: Title,\n          description: Plot,\n          imgUrl: Poster,\n          imdbUrl: Website,\n        };\n\n        store.dispatch(addNewFilm(newFilm));\n      });\n  };\n\n  render() {\n    const { searchWord } = this.state;\n\n    return (\n      <BrowserRouter>\n        <div className=\"page\">\n          <div className=\"content\">\n            <div className=\"box\">\n              <FormField\n                value={searchWord}\n                name=\"searchWord\"\n                placeholder=\"Type search word\"\n                label=\"Search film\"\n                onChange={this.handleSearchChange}\n              />\n              <button\n                onClick={() => this.searchFilm(searchWord)}\n                type=\"button\"\n                className=\"button is-primary\"\n              >\n                Search film\n              </button>\n            </div>\n\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                component={FilmsList}\n              />\n              <Route\n                exact\n                path=\"/film/:id\"\n                component={FilmDetails}\n              />\n            </Switch>\n          </div>\n          <div className=\"sidebar\">\n            <NewFilm onAdd={this.handleAddFilm} />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport 'bulma/css/bulma.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/FilmCard/FilmCard.js","store/index.js","store/redux.js","components/FilmsList/FilmsList.js","components/FormField/FormField.js","validation.js","components/NewFilm/NewFilm.js","components/FilmDetails/FilmDetails.js","App.js","index.js"],"names":["FilmCard","props","title","description","imgUrl","imdbUrl","id","react_default","a","createElement","react_router_dom","to","concat","className","src","alt","href","defaultProps","ACTION_TYPES","ADD_NEW_FILM","addNewFilm","film","type","payload","initialState","films","store","reducer","state","listeners","getState","dispatch","action","forEach","listener","subscribe","cb","Error","push","filter","createStore","arguments","length","undefined","_objectSpread","Object","toConsumableArray","FilmsList","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","unsubscribe","inherits","createClass","key","value","_this2","setState","map","FilmCard_FilmCard_FilmCard","assign","React","Component","FormField","memo","error","name","label","onChange","placeholder","inputClass","cx","is-danger","controlClass","has-icons-right","Control","htmlFor","required","formValidators","NewFilm","_Component","handleChange","_ref","_ref$target","target","prevState","defineProperty","handleSubmit","event","preventDefault","onAdd","formValue","getFormValue","_this$validate","validate","hasError","errors","newState","_ref3","_ref4","slicedToArray","fromEntries","entries","reduce","acc","entry","NewFilm_objectSpread","_ref5","_ref6","fieldData","validator","some","errorData","_this$state","onSubmit","FormField_FormField","FilmDetails","find","String","match","params","API_URL","App","searchWord","handleAddFilm","newFilm","handleSearchChange","searchFilm","fetch","then","response","json","data","Title","Plot","Poster","Website","imdbID","onClick","react_router","exact","path","component","NewFilm_NewFilm","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.7b119e00.chunk.js","sourcesContent":["/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FilmCard.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const FilmCard = (props) => {\r\n  const {\r\n    title,\r\n    description,\r\n    imgUrl,\r\n    imdbUrl,\r\n    id,\r\n  } = props;\r\n\r\n  return (\r\n    <Link to={`/film/${id}`} className=\"card\">\r\n      <div className=\"card-image\">\r\n        <figure className=\"image is-4by3\">\r\n          <img\r\n            src={imgUrl}\r\n            alt=\"Film logo\"\r\n          />\r\n        </figure>\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <div className=\"media\">\r\n          <div className=\"media-left\">\r\n            <figure className=\"image is-48x48\">\r\n              <img\r\n                src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\r\n                alt=\"imdb\"\r\n              />\r\n            </figure>\r\n          </div>\r\n          <div className=\"media-content\">\r\n            <p className=\"title is-4\">{title}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"content\">\r\n          {description}\r\n          <br />\r\n          <a href={imdbUrl}>IMDB</a>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nFilmCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nFilmCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import { createStore } from './redux';\n\nconst ACTION_TYPES = {\n  ADD_NEW_FILM: 'FILM::ADD',\n};\n\nexport const addNewFilm = film => ({\n  type: ACTION_TYPES.ADD_NEW_FILM,\n  payload: film,\n});\n\nconst initialState = {\n  films: [],\n};\n\nfunction reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ACTION_TYPES.ADD_NEW_FILM: {\n      return {\n        ...state,\n        films: [...state.films, {\n          id: state.films.length + 1,\n          ...action.payload,\n        }],\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(reducer);\n\n// console.log('STATE', store.getState());\n//\n// const unsubscribe1 = store.subscribe((state) => {\n//   console.log(state.films.map(({ title }) => title));\n// });\n//\n// store.dispatch(addNewFilm({ title: 'Avengers' }));\n//\n// store.subscribe((state) => {\n//   console.log(state.films);\n// });\n// unsubscribe1();\n//\n// store.dispatch(addNewFilm({ title: 'Spider-Man' }));\n//\n// console.log('STATE', store.getState());\n","export function createStore(reducer) {\n  let state = reducer();\n  let listeners = [];\n\n  return {\n    getState() {\n      return state;\n    },\n    dispatch(action) {\n      state = reducer(state, action);\n\n      listeners.forEach(listener => listener(state));\n    },\n    subscribe(cb) {\n      if (typeof cb !== 'function') {\n        throw new Error('Callback should be a function');\n      }\n\n      listeners.push(cb);\n\n      return () => {\n        listeners = listeners\n          .filter(listener => listener !== cb);\n      };\n    },\n  };\n}\n","import React from 'react';\nimport './FilmsList.scss';\nimport { FilmCard } from '../FilmCard';\nimport { store } from '../../store';\n\nexport class FilmsList extends React.Component {\n  state = {\n    films: store.getState().films,\n  }\n\n  unsubscribe = null;\n\n  componentDidMount() {\n    this.unsubscribe = store.subscribe(() => {\n      this.setState({\n        films: store.getState().films,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const { films } = this.state;\n\n    return (\n      <div className=\"films\">\n        {films.map(film => (\n          <FilmCard key={film.id} {...film} />\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'classnames';\r\nimport './FormField.scss';\r\n\r\nexport const FormField = memo((props) => {\r\n  const {\r\n    error,\r\n    name,\r\n    label,\r\n    type,\r\n    onChange,\r\n    placeholder,\r\n    value,\r\n  } = props;\r\n\r\n  const inputClass = cx('input', { 'is-danger': !!error });\r\n  const controlClass = cx('control', { 'has-icons-right': !!error });\r\n\r\n  const Control = type === 'textarea' ? type : 'input';\r\n\r\n  return (\r\n    <div className=\"field\">\r\n      <label htmlFor={name} className=\"label\">\r\n        {label}\r\n      </label>\r\n      <div className={controlClass}>\r\n        <Control\r\n          name={name}\r\n          id={name}\r\n          className={inputClass}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n        {error && (\r\n          <span className=\"icon is-small is-right\">\r\n            <i className=\"fas fa-exclamation-triangle\" />\r\n          </span>\r\n        )}\r\n      </div>\r\n\r\n      {error && (\r\n        <p className=\"help is-danger\">{error}</p>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nFormField.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string,\r\n  error: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nFormField.defaultProps = {\r\n  error: '',\r\n  type: 'text',\r\n  placeholder: 'Type text here',\r\n};\r\n","export const required = (name, value) => {\r\n  return value\r\n    ? null\r\n    : `Field ${name} is required`;\r\n};\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormField } from '../FormField';\nimport { required } from '../../validation';\n\nconst initialState = {\n  title: {\n    value: '',\n    error: null,\n  },\n  description: {\n    value: '',\n    error: null,\n  },\n  imgUrl: {\n    value: '',\n    error: null,\n  },\n  imdbUrl: {\n    value: '',\n    error: null,\n  },\n};\n\nconst formValidators = {\n  title: required,\n  imgUrl: required,\n  imdbUrl: required,\n};\n\nexport class NewFilm extends Component {\n  state = initialState;\n\n  getFormValue() {\n    return Object.entries(this.state)\n      .reduce((acc, entry) => ({\n        ...acc,\n        [entry[0]]: entry[1].value,\n      }), {});\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState(prevState => ({\n      [name]: {\n        value,\n        error: prevState[name].error,\n      },\n    }));\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { onAdd } = this.props;\n    const formValue = this.getFormValue();\n\n    const { hasError, errors } = this.validate();\n\n    if (hasError) {\n      this.setState((prevState) => {\n        const newState = errors.map(([name, error]) => {\n          return [\n            name,\n            {\n              error,\n              value: prevState[name].value,\n            },\n          ];\n        });\n\n        return Object.fromEntries(newState);\n      });\n    } else {\n      this.setState(initialState);\n      onAdd(formValue);\n    }\n  };\n\n  validate() {\n    const errors = Object.entries(this.state)\n      .map(([name, fieldData]) => {\n        const validator = formValidators[name];\n        const error = validator\n          ? validator(name, fieldData.value)\n          : null;\n\n        return [name, error];\n      });\n\n    const hasError = errors\n      .some(errorData => !!errorData[1]);\n\n    return {\n      hasError,\n      errors,\n    };\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormField\n          {...title}\n          name=\"title\"\n          placeholder=\"Input film title\"\n          label=\"Title\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...description}\n          type=\"textarea\"\n          name=\"description\"\n          placeholder=\"Input film description\"\n          label=\"Description\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imgUrl}\n          name=\"imgUrl\"\n          placeholder=\"Paste image url\"\n          label=\"Image url\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imdbUrl}\n          name=\"imdbUrl\"\n          placeholder=\"Paste IMDB url\"\n          label=\"IMDB url\"\n          onChange={this.handleChange}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"button is-primary\"\n        >\n          Add film\n        </button>\n      </form>\n    );\n  }\n}\n\nNewFilm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","/* eslint-disable max-len */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { store } from '../../store';\n\nexport class FilmDetails extends Component {\n  state = {\n    film: store.getState().films.find(film => String(film.id) === this.props.match.params.id),\n  }\n\n  unsubscribe = null;\n\n  componentDidMount() {\n    const { match } = this.props;\n\n    this.unsubscribe = store.subscribe(() => {\n      this.setState({\n        film: store.getState().films.find(film => String(film.id) === match.params.id),\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const {\n      film,\n    } = this.state;\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={film.imgUrl}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-4\">{film.title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            {film.description}\n            <br />\n            <a href={film.imdbUrl}>IMDB</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFilmDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport { FilmsList } from './components/FilmsList';\nimport { NewFilm } from './components/NewFilm';\nimport { FormField } from './components/FormField';\nimport { FilmDetails } from './components/FilmDetails';\n\nimport { store, addNewFilm } from './store';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=2f4a38c9&t=';\n\nexport class App extends Component {\n  state = {\n    searchWord: '',\n  };\n\n  componentDidMount() {\n    this.searchFilm('spider');\n  }\n\n  handleAddFilm = (newFilm) => {\n    store.dispatch(addNewFilm(newFilm));\n  };\n\n  handleSearchChange = ({ target }) => {\n    this.setState({ searchWord: target.value });\n  };\n\n  searchFilm = (searchWord) => {\n    fetch(`${API_URL}${searchWord}`)\n      .then(response => response.json())\n      .then((data) => {\n        const {\n          Title,\n          Plot,\n          Poster,\n          Website,\n          imdbID,\n        } = data;\n\n        const newFilm = {\n          id: imdbID,\n          title: Title,\n          description: Plot,\n          imgUrl: Poster,\n          imdbUrl: Website,\n        };\n\n        store.dispatch(addNewFilm(newFilm));\n      });\n  };\n\n  render() {\n    const { searchWord } = this.state;\n\n    return (\n      <HashRouter>\n        <div className=\"page\">\n          <div className=\"content\">\n            <div className=\"box\">\n              <FormField\n                value={searchWord}\n                name=\"searchWord\"\n                placeholder=\"Type search word\"\n                label=\"Search film\"\n                onChange={this.handleSearchChange}\n              />\n              <button\n                onClick={() => this.searchFilm(searchWord)}\n                type=\"button\"\n                className=\"button is-primary\"\n              >\n                Search film\n              </button>\n            </div>\n\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                component={FilmsList}\n              />\n              <Route\n                exact\n                path=\"/film/:id\"\n                component={FilmDetails}\n              />\n            </Switch>\n          </div>\n          <div className=\"sidebar\">\n            <NewFilm onAdd={this.handleAddFilm} />\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport 'bulma/css/bulma.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}
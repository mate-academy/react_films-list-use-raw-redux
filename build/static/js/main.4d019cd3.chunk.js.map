{"version":3,"sources":["store/action.js","store/reducers.js","components/FilmCard/FilmCard.js","components/FilmsList/FilmsList.js","components/FormField/FormField.js","validation.js","components/NewFilm/NewFilm.js","components/FilmDetails/FilmDetails.js","App.js","index.js"],"names":["ACTION_TYPES","ADD_NEW_FILM","addNewFilm","film","type","payload","store","createStore","state","action","find","id","Error","title","description","imgUrl","imdbUrl","devToolsEnhancer","FilmCard","className","to","src","alt","href","defaultProps","FilmsList","films","getState","map","key","FormField","memo","props","error","name","label","onChange","placeholder","value","inputClass","cx","controlClass","Control","htmlFor","required","initialState","formValidators","NewFilm","handleChange","target","setState","prevState","handleSubmit","e","preventDefault","onAdd","formValue","getFormValue","validate","hasError","errors","newState","Object","fromEntries","entries","this","reduce","acc","entry","fieldData","validator","some","errorData","onSubmit","Component","FilmDetails","item","API_URL","App","searchWord","handleAddFilm","dispatch","uuidv4","handleSearchChange","searchFilm","a","fetch","filmResponce","json","Title","Plot","Poster","Website","undefined","imdbID","message","unSubscribe","subscribe","forceUpdate","basename","process","onClick","exact","path","component","match","params","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d019cd3.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  ADD_NEW_FILM: 'FILM::ADD',\n};\n\nexport const addNewFilm = film => ({\n  type: ACTION_TYPES.ADD_NEW_FILM,\n  payload: film,\n});\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\nimport {\n  ACTION_TYPES,\n  addNewFilm,\n} from './action';\n\nfunction reducer(state, action) {\n  const { ADD_NEW_FILM } = ACTION_TYPES;\n\n  switch (action.type) {\n    case ADD_NEW_FILM: {\n      if (state.find(film => film.id === action.payload.id)) {\n        throw new Error('The film is present');\n      }\n\n      return [\n        ...state,\n        action.payload,\n      ];\n    }\n\n    default:\n      return state;\n  }\n}\n\nconst films = [{\n  id: '1',\n  title: 'Groundhog Day',\n  description: `A weatherman finds himself inexplicably\n living the same day over and over again.`,\n  imgUrl: 'https://m.media-amazon.com/images/M/MV5BZWIxNzM5YzQtY2FmMS00Yjc3LWI1ZjUtNGVjMjMzZTIxZTIxXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SY1000_CR0,0,671,1000_AL_.jpg',\n  imdbUrl: 'https://www.imdb.com/title/tt0107048/',\n}];\n\nexport const store = createStore(\n  reducer,\n  films,\n  devToolsEnhancer(addNewFilm())\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FilmCard.scss';\n\nimport { Link } from 'react-router-dom';\n\nconst FilmCard = ({\n  id,\n  title,\n  description,\n  imgUrl,\n  imdbUrl,\n}) => (\n\n  <div className=\"card\">\n    <Link to={`/film/${id}`}>\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-4\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n        </div>\n      </div>\n    </Link>\n    <a href={imdbUrl}>IMDB</a>\n  </div>\n);\n\nFilmCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nFilmCard.defaultProps = {\n  description: '',\n};\n\nexport default FilmCard;\n","import React from 'react';\nimport './FilmsList.scss';\n\nimport { store } from '../../store/reducers';\nimport FilmCard from '../FilmCard/FilmCard';\n\nconst FilmsList = () => {\n  const films = store.getState();\n\n  return (\n    <div className=\"films\">\n      {films.map((film) => (\n        <FilmCard key={film.id} {...film} />\n      ))}\n    </div>\n  );\n};\n\nexport default FilmsList;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './FormField.scss';\n\nconst FormField = memo((props) => {\n  const {\n    error,\n    name,\n    label,\n    type,\n    onChange,\n    placeholder,\n    value,\n  } = props;\n\n  const inputClass = cx('input', { 'is-danger': !!error });\n  const controlClass = cx('control', { 'has-icons-right': !!error });\n\n  const Control = type === 'textarea' ? type : 'input';\n\n  return (\n    <div className=\"field\">\n      <label htmlFor={name} className=\"label\">\n        {label}\n      </label>\n      <div className={controlClass}>\n        <Control\n          name={name}\n          id={name}\n          className={inputClass}\n          type={type}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n        {error && (\n          <span className=\"icon is-small is-right\">\n            <i className=\"fas fa-exclamation-triangle\" />\n          </span>\n        )}\n      </div>\n\n      {error && (\n        <p className=\"help is-danger\">{error}</p>\n      )}\n    </div>\n  );\n});\n\nFormField.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  error: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nFormField.defaultProps = {\n  error: '',\n  type: 'text',\n  placeholder: 'Type text here',\n};\n\nexport default FormField;\n","export const required = (name, value) => {\n  return value\n    ? null\n    : `Field ${name} is required`;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FormField from '../FormField/FormField';\nimport { required } from '../../validation';\n\nconst initialState = {\n  title: {\n    value: '',\n    error: null,\n  },\n  description: {\n    value: '',\n    error: null,\n  },\n  imgUrl: {\n    value: '',\n    error: null,\n  },\n  imdbUrl: {\n    value: '',\n    error: null,\n  },\n};\n\nconst formValidators = {\n  title: required,\n  imgUrl: required,\n  imdbUrl: required,\n};\n\nclass NewFilm extends Component {\n  state = initialState;\n\n  getFormValue() {\n    return Object.entries(this.state)\n      .reduce((acc, entry) => ({\n        ...acc,\n        [entry[0]]: entry[1].value,\n      }), {});\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState(prevState => ({\n      [name]: {\n        value,\n        error: prevState[name].error,\n      },\n    }));\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { onAdd } = this.props;\n    const formValue = this.getFormValue();\n\n    const { hasError, errors } = this.validate();\n\n    if (hasError) {\n      this.setState((prevState) => {\n        const newState = errors.map(([name, error]) => {\n          return [\n            name,\n            {\n              error,\n              value: prevState[name].value,\n            },\n          ];\n        });\n\n        return Object.fromEntries(newState);\n      });\n    } else {\n      this.setState(initialState);\n      onAdd(formValue);\n    }\n  };\n\n  validate() {\n    const errors = Object.entries(this.state)\n      .map(([name, fieldData]) => {\n        const validator = formValidators[name];\n        const error = validator\n          ? validator(name, fieldData.value)\n          : null;\n\n        return [name, error];\n      });\n\n    const hasError = errors\n      .some(errorData => !!errorData[1]);\n\n    return {\n      hasError,\n      errors,\n    };\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormField\n          {...title}\n          name=\"title\"\n          placeholder=\"Input film title\"\n          label=\"Title\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...description}\n          type=\"textarea\"\n          name=\"description\"\n          placeholder=\"Input film description\"\n          label=\"Description\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imgUrl}\n          name=\"imgUrl\"\n          placeholder=\"Paste image url\"\n          label=\"Image url\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imdbUrl}\n          name=\"imdbUrl\"\n          placeholder=\"Paste IMDB url\"\n          label=\"IMDB url\"\n          onChange={this.handleChange}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"button is-primary\"\n        >\n          Add film\n        </button>\n      </form>\n    );\n  }\n}\n\nNewFilm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n\nexport default NewFilm;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { store } from '../../store/reducers';\n\nconst FilmDetails = ({ id }) => {\n  const {\n    title,\n    imgUrl,\n    description,\n    imdbUrl,\n  } = store.getState().find(item => item.id === id);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-4\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nFilmDetails.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default FilmDetails;\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport uuidv4 from 'uuidv4';\nimport './App.scss';\n\nimport FilmsList from './components/FilmsList/FilmsList';\nimport NewFilm from './components/NewFilm/NewFilm';\nimport FormField from './components/FormField/FormField';\nimport FilmDetails from './components/FilmDetails/FilmDetails';\n\nimport { store } from './store/reducers';\n\nimport {\n  addNewFilm,\n} from './store/action';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=2f4a38c9&t=';\n\nexport class App extends Component {\n  state = {\n    searchWord: '',\n    error: null,\n  };\n\n  componentDidMount() {\n    this.unSubscribe = store.subscribe(() => {\n      this.setState({ error: null });\n      this.forceUpdate();\n    });\n  }\n\n  componentWillUnmount() {\n    this.unSubscribe();\n  }\n\n  handleAddFilm = ({\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n  }) => {\n    store.dispatch(addNewFilm({\n      id: uuidv4(),\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n    }));\n  };\n\n  handleSearchChange = ({ target }) => this.setState({\n    searchWord: target.value,\n    error: null,\n  });\n\n  searchFilm = async(searchWord) => {\n    try {\n      const filmResponce = await fetch(`${API_URL}${searchWord}`);\n      const {\n        Title,\n        Plot,\n        Poster,\n        Website,\n        imdbID,\n      } = await filmResponce.json();\n\n      if (imdbID === undefined) {\n        throw new Error('Film not found');\n      }\n\n      store.dispatch(addNewFilm({\n        id: imdbID,\n        title: Title,\n        description: Plot,\n        imgUrl: Poster,\n        imdbUrl: Website,\n      }));\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  };\n\n  render() {\n    const { searchWord, error } = this.state;\n\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div className=\"page\">\n          <div className=\"content\">\n            <div className=\"box\">\n              <FormField\n                error={error}\n                value={searchWord}\n                name=\"searchWord\"\n                placeholder=\"Type search word\"\n                label=\"Search film\"\n                onChange={this.handleSearchChange}\n              />\n              <button\n                onClick={() => this.searchFilm(searchWord)}\n                type=\"button\"\n                className=\"button is-primary\"\n              >\n                Search film\n              </button>\n            </div>\n\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                component={() => (\n                  <FilmsList />\n                )}\n              />\n              <Route\n                exact\n                path=\"/film/:id\"\n                component={({ match }) => (\n                  <FilmDetails id={match.params.id} />\n                )}\n              />\n            </Switch>\n          </div>\n          <div className=\"sidebar\">\n            <NewFilm onAdd={this.handleAddFilm} />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
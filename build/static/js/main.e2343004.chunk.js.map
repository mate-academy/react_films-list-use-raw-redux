{"version":3,"sources":["store/index.js","store/redux.js","components/FilmCard/FilmCard.js","components/FilmsList/FilmsList.js","components/FormField/FormField.js","validation.js","components/NewFilm/NewFilm.js","components/FilmDetails/FilmDetails.js","App.js","index.js"],"names":["ACTION_TYPES","ADD_NEW_FILM","addNewFilm","film","type","payload","initialState","films","store","reducer","state","listeners","getState","dispatch","action","forEach","listener","subscribe","cb","Error","push","filter","createStore","arguments","length","undefined","_objectSpread","concat","Object","toConsumableArray","id","imdbID","FilmCard","props","title","description","imgUrl","imdbUrl","react_default","a","createElement","react_router_dom","to","className","src","alt","href","defaultProps","FilmsList","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","filmsList","unsubscribe","handleStoreChange","setState","inherits","createClass","key","value","map","FilmCard_FilmCard_FilmCard","assign","React","Component","FormField","memo","error","name","label","onChange","placeholder","inputClass","cx","is-danger","controlClass","has-icons-right","Control","htmlFor","required","formValidators","NewFilm","_Component","handleChange","_ref","_ref$target","target","prevState","defineProperty","handleSubmit","event","preventDefault","onAdd","formValue","getFormValue","_this$validate","validate","hasError","errors","newState","_ref3","_ref4","slicedToArray","fromEntries","entries","reduce","acc","entry","NewFilm_objectSpread","_ref5","_ref6","fieldData","validator","some","errorData","_this$state","onSubmit","FormField_FormField","FilmDetails","findFilm","match","find","String","params","_this$state$film","API_URL","App","searchWord","handleAddFilm","newFilm","handleSearchChange","searchFilm","fetch","then","response","json","data","Title","Poster","Plot","Website","_this2","onClick","react_router","exact","path","component","NewFilm_NewFilm","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.e2343004.chunk.js","sourcesContent":["import { createStore } from './redux';\n\nconst ACTION_TYPES = {\n  ADD_NEW_FILM: 'FILM::ADD',\n};\n\nexport const addNewFilm = film => ({\n  type: ACTION_TYPES.ADD_NEW_FILM,\n  payload: film,\n});\n\nconst initialState = {\n  films: [],\n};\n\nfunction reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ACTION_TYPES.ADD_NEW_FILM: {\n      return {\n        ...state,\n        films: [...state.films, {\n          id: state.films.imdbID,\n          ...action.payload,\n        }],\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(reducer);\n\n// console.log('STATE', store.getState());\n//\n// const unsubscribe1 = store.subscribe((state) => {\n//   console.log(state.films.map(({ title }) => title));\n// });\n//\n// store.dispatch(addNewFilm({ title: 'Avengers' }));\n//\n// store.subscribe((state) => {\n//   console.log(state.films);\n// });\n// unsubscribe1();\n//\n// store.dispatch(addNewFilm({ title: 'Spider-Man' }));\n//\n// console.log('STATE', store.getState());\n","export function createStore(reducer) {\n  let state = reducer();\n  let listeners = [];\n\n  return {\n    getState() {\n      return state;\n    },\n    dispatch(action) {\n      state = reducer(state, action);\n\n      listeners.forEach(listener => listener(state));\n    },\n    subscribe(cb) {\n      if (typeof cb !== 'function') {\n        throw new Error('Callback should be a function');\n      }\n\n      listeners.push(cb);\n\n      return () => {\n        listeners = listeners\n          .filter(listener => listener !== cb);\n      };\n    },\n  };\n}\n","/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './FilmCard.scss';\nimport { Link } from 'react-router-dom';\n\nexport const FilmCard = (props) => {\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    id,\n  } = props;\n\n  return (\n    <Link to={`/film/${id}`} className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-4\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nFilmCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nFilmCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport './FilmsList.scss';\nimport { store } from '../../store/index';\nimport { FilmCard } from '../FilmCard';\n\nexport class FilmsList extends React.Component {\n  state = {\n    filmsList: store.getState().films,\n  }\n\n  unsubscribe = null;\n\n  componentDidMount() {\n    this.unsubscribe = store.subscribe(this.handleStoreChange);\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  handleStoreChange = () => {\n    const { films } = store.getState();\n\n    this.setState({\n      filmsList: films,\n    });\n  };\n\n  render() {\n    const { filmsList } = this.state;\n    return (\n      <div className=\"films\">\n        {filmsList.map(film => (\n          <FilmCard key={film.id} {...film} />\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './FormField.scss';\n\nexport const FormField = memo((props) => {\n  const {\n    error,\n    name,\n    label,\n    type,\n    onChange,\n    placeholder,\n    value,\n  } = props;\n\n  const inputClass = cx('input', { 'is-danger': !!error });\n  const controlClass = cx('control', { 'has-icons-right': !!error });\n\n  const Control = type === 'textarea' ? type : 'input';\n\n  return (\n    <div className=\"field\">\n      <label htmlFor={name} className=\"label\">\n        {label}\n      </label>\n      <div className={controlClass}>\n        <Control\n          name={name}\n          id={name}\n          className={inputClass}\n          type={type}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n        {error && (\n          <span className=\"icon is-small is-right\">\n            <i className=\"fas fa-exclamation-triangle\" />\n          </span>\n        )}\n      </div>\n\n      {error && (\n        <p className=\"help is-danger\">{error}</p>\n      )}\n    </div>\n  );\n});\n\nFormField.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  error: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nFormField.defaultProps = {\n  error: '',\n  type: 'text',\n  placeholder: 'Type text here',\n};\n","export const required = (name, value) => {\n  return value\n    ? null\n    : `Field ${name} is required`;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormField } from '../FormField';\nimport { required } from '../../validation';\n\nconst initialState = {\n  title: {\n    value: '',\n    error: null,\n  },\n  description: {\n    value: '',\n    error: null,\n  },\n  imgUrl: {\n    value: '',\n    error: null,\n  },\n  imdbUrl: {\n    value: '',\n    error: null,\n  },\n};\n\nconst formValidators = {\n  title: required,\n  imgUrl: required,\n  imdbUrl: required,\n};\n\nexport class NewFilm extends Component {\n  state = initialState;\n\n  getFormValue() {\n    return Object.entries(this.state)\n      .reduce((acc, entry) => ({\n        ...acc,\n        [entry[0]]: entry[1].value,\n      }), {});\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState(prevState => ({\n      [name]: {\n        value,\n        error: prevState[name].error,\n      },\n    }));\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { onAdd } = this.props;\n    const formValue = this.getFormValue();\n\n    const { hasError, errors } = this.validate();\n\n    if (hasError) {\n      this.setState((prevState) => {\n        const newState = errors.map(([name, error]) => {\n          return [\n            name,\n            {\n              error,\n              value: prevState[name].value,\n            },\n          ];\n        });\n\n        return Object.fromEntries(newState);\n      });\n    } else {\n      this.setState(initialState);\n      onAdd(formValue);\n    }\n  };\n\n  validate() {\n    const errors = Object.entries(this.state)\n      .map(([name, fieldData]) => {\n        const validator = formValidators[name];\n        const error = validator\n          ? validator(name, fieldData.value)\n          : null;\n\n        return [name, error];\n      });\n\n    const hasError = errors\n      .some(errorData => !!errorData[1]);\n\n    return {\n      hasError,\n      errors,\n    };\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormField\n          {...title}\n          name=\"title\"\n          placeholder=\"Input film title\"\n          label=\"Title\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...description}\n          type=\"textarea\"\n          name=\"description\"\n          placeholder=\"Input film description\"\n          label=\"Description\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imgUrl}\n          name=\"imgUrl\"\n          placeholder=\"Paste image url\"\n          label=\"Image url\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imdbUrl}\n          name=\"imdbUrl\"\n          placeholder=\"Paste IMDB url\"\n          label=\"IMDB url\"\n          onChange={this.handleChange}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"button is-primary\"\n        >\n          Add film\n        </button>\n      </form>\n    );\n  }\n}\n\nNewFilm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","/* eslint-disable max-len */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { store } from '../../store/index';\n\nexport class FilmDetails extends Component {\n  state = {\n    film: this.findFilm(),\n  }\n\n  unsubscribe = null\n\n  componentDidMount() {\n    this.unsubscribe = store.subscribe(this.handleStoreChange);\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  handleStoreChange = () => {\n    this.setState({\n      film: this.findFilm(),\n    });\n  };\n\n  findFilm() {\n    const { match } = this.props;\n\n    return store.getState().films\n      .find(film => String(film.id) === match.params.id);\n  }\n\n  render() {\n    const {\n      film: {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n      },\n    } = this.state;\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={imgUrl}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-4\">{title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            {description}\n            <br />\n            <a href={imdbUrl}>IMDB</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFilmDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport { FilmsList } from './components/FilmsList';\nimport { NewFilm } from './components/NewFilm';\nimport { FormField } from './components/FormField';\nimport { FilmDetails } from './components/FilmDetails';\nimport { store, addNewFilm } from './store/index';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=2f4a38c9&t=';\n\nexport class App extends Component {\n  state = { searchWord: '' };\n\n  componentDidMount() {\n    this.searchFilm('spider');\n  }\n\n  handleAddFilm = (newFilm) => {\n    store.dispatch(addNewFilm(newFilm));\n  };\n\n  handleSearchChange = ({ target }) => {\n    this.setState({ searchWord: target.value });\n  };\n\n  searchFilm = (searchWord) => {\n    fetch(`${API_URL}${searchWord}`)\n      .then(response => response.json())\n      .then((data) => {\n        const {\n          Title,\n          Poster,\n          Plot,\n          Website,\n          imdbID,\n        } = data;\n\n        const newFilm = {\n          id: imdbID,\n          title: Title,\n          description: Plot,\n          imgUrl: Poster,\n          imdbUrl: Website,\n        };\n\n        store.dispatch(addNewFilm(newFilm));\n      });\n  };\n\n  render() {\n    const { searchWord } = this.state;\n\n    return (\n      <HashRouter>\n        <div className=\"page\">\n          <div className=\"content\">\n            <div className=\"box\">\n              <FormField\n                value={searchWord}\n                name=\"searchWord\"\n                placeholder=\"Type search word\"\n                label=\"Search film\"\n                onChange={this.handleSearchChange}\n              />\n              <button\n                onClick={() => this.searchFilm(searchWord)}\n                type=\"button\"\n                className=\"button is-primary\"\n              >\n                Search film\n              </button>\n            </div>\n\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                component={FilmsList}\n              />\n              <Route\n                exact\n                path=\"/film/:id\"\n                component={FilmDetails}\n              />\n            </Switch>\n          </div>\n          <div className=\"sidebar\">\n            <NewFilm onAdd={this.handleAddFilm} />\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
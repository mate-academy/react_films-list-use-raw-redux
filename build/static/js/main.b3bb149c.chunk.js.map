{"version":3,"sources":["store/action.js","store/reducers.js","components/FilmCard/FilmCard.js","components/FilmsList/FilmsList.js","components/FormField/FormField.js","validation.js","components/NewFilm/NewFilm.js","components/FilmDetails/FilmDetails.js","App.js","index.js"],"names":["ACTION_TYPES","ADD_NEW_FILM","SET_ERROR_MESSAGE","addNewFilm","film","type","payload","setErrorMessage","error","store","createStore","state","action","films","find","id","Error","title","description","imgUrl","imdbUrl","devToolsEnhancer","FilmCard","className","to","src","alt","href","defaultProps","FilmsList","getState","this","unSubscribe","subscribe","newFilms","length","setState","map","key","Component","FormField","props","name","label","onChange","placeholder","value","inputClass","cx","controlClass","Control","htmlFor","required","initialState","formValidators","NewFilm","handleChange","target","prevState","handleSubmit","e","preventDefault","onAdd","formValue","getFormValue","validate","hasError","errors","newState","Object","fromEntries","entries","reduce","acc","entry","fieldData","validator","some","errorData","onSubmit","FilmDetails","item","API_URL","App","searchWord","handleAddFilm","dispatch","uuidv4","handleSearchChange","searchFilm","a","fetch","filmResponce","json","Title","Plot","Poster","Website","undefined","imdbID","message","basename","process","onClick","exact","path","component","match","params","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3bb149c.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  ADD_NEW_FILM: 'FILM::ADD',\n  SET_ERROR_MESSAGE: 'ERROR::MESSAGE',\n};\n\nexport const addNewFilm = (film) => ({\n  type: ACTION_TYPES.ADD_NEW_FILM,\n  payload: film,\n});\n\nexport const setErrorMessage = (error) => ({\n  type: ACTION_TYPES.SET_ERROR_MESSAGE,\n  payload: error,\n});\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\nimport {\n  ACTION_TYPES,\n  addNewFilm,\n} from './action';\n\nfunction reducer(state, action) {\n  const { ADD_NEW_FILM, SET_ERROR_MESSAGE } = ACTION_TYPES;\n  const { films } = state;\n\n  switch (action.type) {\n    case ADD_NEW_FILM: {\n      if (films.find((film) => film.id === action.payload.id)) {\n        throw new Error('The film is present');\n      }\n\n      return {\n        ...state,\n        films: [...films, action.payload],\n      };\n    }\n\n    case SET_ERROR_MESSAGE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nconst filmsInitial = [{\n  id: '1',\n  title: 'Groundhog Day',\n  description: `A weatherman finds himself inexplicably\n living the same day over and over again.`,\n  imgUrl: 'https://m.media-amazon.com/images/M/MV5BZWIxNzM5YzQtY2FmMS00Yjc3LWI1ZjUtNGVjMjMzZTIxZTIxXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SY1000_CR0,0,671,1000_AL_.jpg',\n  imdbUrl: 'https://www.imdb.com/title/tt0107048/',\n}];\n\nexport const store = createStore(\n  reducer,\n  { films: filmsInitial, error: null },\n  devToolsEnhancer(addNewFilm())\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FilmCard.scss';\n\nimport { Link } from 'react-router-dom';\n\nconst FilmCard = ({\n  id,\n  title,\n  description,\n  imgUrl,\n  imdbUrl,\n}) => (\n\n  <div className=\"card\">\n    <Link to={`/film/${id}`}>\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-4\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n        </div>\n      </div>\n    </Link>\n    <a href={imdbUrl}>IMDB</a>\n  </div>\n);\n\nFilmCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string,\n};\n\nFilmCard.defaultProps = {\n  description: '',\n  imdbUrl: null,\n};\n\nexport default FilmCard;\n","import React, { Component } from 'react';\nimport './FilmsList.scss';\n\nimport { store } from '../../store/reducers';\nimport FilmCard from '../FilmCard/FilmCard';\n\nexport class FilmsList extends Component {\n  state = {\n    films: store.getState().films,\n  };\n\n  componentDidMount() {\n\n    this.unSubscribe = store.subscribe(() => {\n      const { films } = this.state;\n      const newFilms = store.getState().films;\n      if (films.length !== newFilms.length) {\n        this.setState({\n          films: store.getState().films,\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unSubscribe();\n  }\n\n  render() {\n    const { films } = this.state;\n\n    return (\n      <div className=\"films\">\n        {films.map((film) => (\n          <FilmCard key={film.id} {...film} />\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './FormField.scss';\nimport { store } from '../../store/reducers';\n\nexport class FormField extends Component {\n  state = {\n    error: store.getState().error,\n  };\n\n  componentDidMount() {\n    this.unSubscribe = store.subscribe(() => {\n      this.setState({\n        error: store.getState().error,\n      });\n    });\n  }\n\n  render() {\n    const { error } = this.state;\n\n    const {\n      name,\n      label,\n      type,\n      onChange,\n      placeholder,\n      value,\n    } = this.props;\n\n    const inputClass = cx('input', { 'is-danger': !!error });\n\n    const controlClass = cx('control', { 'has-icons-right': !!error });\n\n    const Control = type === 'textarea' ? type : 'input';\n\n    return (\n      <div className=\"field\">\n        <label htmlFor={name} className=\"label\">\n          {label}\n        </label>\n        <div className={controlClass}>\n          <Control\n            name={name}\n            id={name}\n            className={inputClass}\n            type={type}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n          />\n          {error && (\n            <span className=\"icon is-small is-right\">\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {error && (\n          <p className=\"help is-danger\">{error}</p>\n        )}\n      </div>\n    );\n  }\n}\n\nFormField.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nFormField.defaultProps = {\n  type: 'text',\n  placeholder: 'Type text here',\n};\n\nexport default FormField;\n","export const required = (name, value) => {\n  return value\n    ? null\n    : `Field ${name} is required`;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FormField from '../FormField/FormField';\nimport { required } from '../../validation';\n\nconst initialState = {\n  title: {\n    value: '',\n    error: null,\n  },\n  description: {\n    value: '',\n    error: null,\n  },\n  imgUrl: {\n    value: '',\n    error: null,\n  },\n  imdbUrl: {\n    value: '',\n    error: null,\n  },\n};\n\nconst formValidators = {\n  title: required,\n  imgUrl: required,\n  imdbUrl: required,\n};\n\nclass NewFilm extends Component {\n  state = initialState;\n\n  getFormValue() {\n    return Object.entries(this.state)\n      .reduce((acc, entry) => ({\n        ...acc,\n        [entry[0]]: entry[1].value,\n      }), {});\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState(prevState => ({\n      [name]: {\n        value,\n        error: prevState[name].error,\n      },\n    }));\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { onAdd } = this.props;\n    const formValue = this.getFormValue();\n\n    const { hasError, errors } = this.validate();\n\n    if (hasError) {\n      this.setState((prevState) => {\n        const newState = errors.map(([name, error]) => {\n          return [\n            name,\n            {\n              error,\n              value: prevState[name].value,\n            },\n          ];\n        });\n\n        return Object.fromEntries(newState);\n      });\n    } else {\n      this.setState(initialState);\n      onAdd(formValue);\n    }\n  };\n\n  validate() {\n    const errors = Object.entries(this.state)\n      .map(([name, fieldData]) => {\n        const validator = formValidators[name];\n        const error = validator\n          ? validator(name, fieldData.value)\n          : null;\n\n        return [name, error];\n      });\n\n    const hasError = errors\n      .some(errorData => !!errorData[1]);\n\n    return {\n      hasError,\n      errors,\n    };\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormField\n          {...title}\n          name=\"title\"\n          placeholder=\"Input film title\"\n          label=\"Title\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...description}\n          type=\"textarea\"\n          name=\"description\"\n          placeholder=\"Input film description\"\n          label=\"Description\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imgUrl}\n          name=\"imgUrl\"\n          placeholder=\"Paste image url\"\n          label=\"Image url\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imdbUrl}\n          name=\"imdbUrl\"\n          placeholder=\"Paste IMDB url\"\n          label=\"IMDB url\"\n          onChange={this.handleChange}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"button is-primary\"\n        >\n          Add film\n        </button>\n      </form>\n    );\n  }\n}\n\nNewFilm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n\nexport default NewFilm;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { store } from '../../store/reducers';\n\nconst FilmDetails = ({ id }) => {\n  const {\n    title,\n    imgUrl,\n    description,\n    imdbUrl,\n  } = store.getState().films.find((item) => item.id === id);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-4\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nFilmDetails.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default FilmDetails;\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport uuidv4 from 'uuidv4';\nimport './App.scss';\n\nimport { FilmsList } from './components/FilmsList/FilmsList';\nimport NewFilm from './components/NewFilm/NewFilm';\nimport { FormField } from './components/FormField/FormField';\nimport FilmDetails from './components/FilmDetails/FilmDetails';\n\nimport { store } from './store/reducers';\n\nimport {\n  addNewFilm,\n  setErrorMessage,\n} from './store/action';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=2f4a38c9&t=';\n\nexport class App extends Component {\n  state = {\n    searchWord: '',\n  };\n\n  handleAddFilm = ({\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n  }) => {\n    store.dispatch(addNewFilm({\n      id: uuidv4(),\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n    }));\n  };\n\n  handleSearchChange = ({ target }) => {\n    this.setState({ searchWord: target.value });\n    store.dispatch(setErrorMessage(null));\n  };\n\n  searchFilm = async(searchWord) => {\n    try {\n      const filmResponce = await fetch(`${API_URL}${searchWord}`);\n      const {\n        Title,\n        Plot,\n        Poster,\n        Website,\n        imdbID,\n      } = await filmResponce.json();\n\n      if (imdbID === undefined) {\n        throw new Error('Film not found');\n      }\n\n      store.dispatch(addNewFilm({\n        id: imdbID,\n        title: Title,\n        description: Plot,\n        imgUrl: Poster,\n        imdbUrl: Website,\n      }));\n    } catch (error) {\n      store.dispatch(setErrorMessage(error.message));\n    }\n  };\n\n  render() {\n    const { searchWord } = this.state;\n\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div className=\"page\">\n          <div className=\"content\">\n            <div className=\"box\">\n              <FormField\n                value={searchWord}\n                name=\"searchWord\"\n                placeholder=\"Type search word\"\n                label=\"Search film\"\n                onChange={this.handleSearchChange}\n              />\n              <button\n                onClick={() => this.searchFilm(searchWord)}\n                type=\"button\"\n                className=\"button is-primary\"\n              >\n                Search film\n              </button>\n            </div>\n\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                component={FilmsList}\n              />\n              <Route\n                exact\n                path=\"/film/:id\"\n                component={({ match }) => (\n                  <FilmDetails id={match.params.id} />\n                )}\n              />\n            </Switch>\n          </div>\n          <div className=\"sidebar\">\n            <NewFilm onAdd={this.handleAddFilm} />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
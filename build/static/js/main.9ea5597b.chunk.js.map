{"version":3,"sources":["store/action.js","store/reducers.js","components/FilmCard/FilmCard.js","components/FilmsList/FilmsList.js","components/FormField/FormField.js","validation.js","components/NewFilm/NewFilm.js","components/FilmDetails/FilmDetails.js","App.js","index.js"],"names":["ACTION_TYPES","ADD_NEW_FILM","addNewFilm","film","type","payload","store","createStore","state","action","find","id","Error","concat","Object","toConsumableArray","title","description","imgUrl","imdbUrl","FilmCard","props","react_default","a","createElement","className","react_router_dom","to","src","alt","href","defaultProps","FilmsList","films","getState","console","log","map","FilmCard_FilmCard_FilmCard","assign","key","FormField","memo","error","name","label","onChange","placeholder","value","inputClass","cx","is-danger","controlClass","has-icons-right","Control","htmlFor","required","initialState","formValidators","NewFilm","handleChange","_ref","_ref$target","target","_this","setState","prevState","defineProperty","handleSubmit","e","preventDefault","onAdd","formValue","getFormValue","_this$validate","validate","hasError","errors","newState","_ref3","_ref4","slicedToArray","fromEntries","entries","this","reduce","acc","entry","_objectSpread","_ref5","_ref6","fieldData","validator","some","errorData","_this$state","onSubmit","components_FormField_FormField","Component","FilmDetails","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","_this$props","API_URL","App","_getPrototypeOf2","_len","length","args","Array","_key","call","searchWord","handleAddFilm","dispatch","shortid","generate","forceUpdate","handleSearchChange","_ref2","searchFilm","asyncToGenerator","regenerator_default","mark","_callee","filmResponce","Title","Plot","Poster","Website","imdbID","wrap","_context","prev","next","fetch","sent","json","undefined","t0","message","stop","_x","_this2","filmsList","onClick","react_router","exact","path","render","FilmsList_FilmsList_FilmsList","match","f","String","params","FilmDetails_FilmDetails","components_NewFilm_NewFilm","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.9ea5597b.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  ADD_NEW_FILM: 'FILM::ADD',\n};\n\nexport const addNewFilm = film => ({\n  type: ACTION_TYPES.ADD_NEW_FILM,\n  payload: film,\n});\n","import { createStore } from 'redux';\n\nimport {\n  ACTION_TYPES,\n} from './action';\n\nfunction reducer(state, action) {\n  const { ADD_NEW_FILM } = ACTION_TYPES;\n\n  switch (action.type) {\n    case ADD_NEW_FILM: {\n      if (state.find(film => film.id === action.payload.id)) {\n        throw new Error('The film is present');\n      }\n\n      return [\n        ...state,\n        action.payload,\n      ];\n    }\n\n    default:\n      return state;\n  }\n}\n\nconst films = [{\n  id: '1',\n  title: 'Groundhog Day',\n  description: `A weatherman finds himself inexplicably\n living the same day over and over again.`,\n  imgUrl: 'https://m.media-amazon.com/images/M/MV5BZWIxNzM5YzQtY2FmMS00Yjc3LWI1ZjUtNGVjMjMzZTIxZTIxXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SY1000_CR0,0,671,1000_AL_.jpg',\n  imdbUrl: 'https://www.imdb.com/title/tt0107048/',\n}];\n\nexport const store = createStore(reducer, films);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FilmCard.scss';\n\nimport { Link } from 'react-router-dom';\n\nexport const FilmCard = (props) => {\n  const {\n    id,\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n  } = props;\n\n  return (\n    <div className=\"card\">\n      <Link to={`/film/${id}`}>\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={imgUrl}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-4\">{title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            {description}\n            <br />\n          </div>\n        </div>\n      </Link>\n      <a href={imdbUrl}>IMDB</a>\n    </div>\n  );\n};\n\nFilmCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nFilmCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport './FilmsList.scss';\n\nimport { store } from '../../store/reducers';\nimport { FilmCard } from '../FilmCard/FilmCard';\n\nexport const FilmsList = () => {\n  const films = store.getState();\n\n  console.log(films);\n\n  return (\n    <div className=\"films\">\n      {films.map(film => (\n        <FilmCard key={film.id} {...film} />\n      ))}\n    </div>\n  );\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './FormField.scss';\n\nconst FormField = memo((props) => {\n  const {\n    error,\n    name,\n    label,\n    type,\n    onChange,\n    placeholder,\n    value,\n  } = props;\n\n  const inputClass = cx('input', { 'is-danger': !!error });\n  const controlClass = cx('control', { 'has-icons-right': !!error });\n\n  const Control = type === 'textarea' ? type : 'input';\n\n  return (\n    <div className=\"field\">\n      <label htmlFor={name} className=\"label\">\n        {label}\n      </label>\n      <div className={controlClass}>\n        <Control\n          name={name}\n          id={name}\n          className={inputClass}\n          type={type}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n        {error && (\n          <span className=\"icon is-small is-right\">\n            <i className=\"fas fa-exclamation-triangle\" />\n          </span>\n        )}\n      </div>\n\n      {error && (\n        <p className=\"help is-danger\">{error}</p>\n      )}\n    </div>\n  );\n});\n\nFormField.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  error: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nFormField.defaultProps = {\n  error: '',\n  type: 'text',\n  placeholder: 'Type text here',\n};\n\nexport default FormField;\n","export const required = (name, value) => {\n  return value\n    ? null\n    : `Field ${name} is required`;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FormField from '../FormField/FormField';\nimport { required } from '../../validation';\n\nconst initialState = {\n  title: {\n    value: '',\n    error: null,\n  },\n  description: {\n    value: '',\n    error: null,\n  },\n  imgUrl: {\n    value: '',\n    error: null,\n  },\n  imdbUrl: {\n    value: '',\n    error: null,\n  },\n};\n\nconst formValidators = {\n  title: required,\n  imgUrl: required,\n  imdbUrl: required,\n};\n\nclass NewFilm extends Component {\n  state = initialState;\n\n  getFormValue() {\n    return Object.entries(this.state)\n      .reduce((acc, entry) => ({\n        ...acc,\n        [entry[0]]: entry[1].value,\n      }), {});\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState(prevState => ({\n      [name]: {\n        value,\n        error: prevState[name].error,\n      },\n    }));\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { onAdd } = this.props;\n    const formValue = this.getFormValue();\n\n    const { hasError, errors } = this.validate();\n\n    if (hasError) {\n      this.setState((prevState) => {\n        const newState = errors.map(([name, error]) => {\n          return [\n            name,\n            {\n              error,\n              value: prevState[name].value,\n            },\n          ];\n        });\n\n        return Object.fromEntries(newState);\n      });\n    } else {\n      this.setState(initialState);\n      onAdd(formValue);\n    }\n  };\n\n  validate() {\n    const errors = Object.entries(this.state)\n      .map(([name, fieldData]) => {\n        const validator = formValidators[name];\n        const error = validator\n          ? validator(name, fieldData.value)\n          : null;\n\n        return [name, error];\n      });\n\n    const hasError = errors\n      .some(errorData => !!errorData[1]);\n\n    return {\n      hasError,\n      errors,\n    };\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormField\n          {...title}\n          name=\"title\"\n          placeholder=\"Input film title\"\n          label=\"Title\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...description}\n          type=\"textarea\"\n          name=\"description\"\n          placeholder=\"Input film description\"\n          label=\"Description\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imgUrl}\n          name=\"imgUrl\"\n          placeholder=\"Paste image url\"\n          label=\"Image url\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imdbUrl}\n          name=\"imdbUrl\"\n          placeholder=\"Paste IMDB url\"\n          label=\"IMDB url\"\n          onChange={this.handleChange}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"button is-primary\"\n        >\n          Add film\n        </button>\n      </form>\n    );\n  }\n}\n\nNewFilm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n\nexport default NewFilm;\n","/* eslint-disable max-len */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class FilmDetails extends Component {\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n    } = this.props;\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={imgUrl}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-4\">{title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            {description}\n            <br />\n            <a href={imdbUrl}>IMDB</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFilmDetails.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nFilmDetails.defaultProps = {\n  description: '',\n};\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport shortid from 'shortid';\nimport './App.scss';\n\nimport { FilmsList } from './components/FilmsList';\nimport NewFilm from './components/NewFilm/NewFilm';\nimport FormField from './components/FormField/FormField';\nimport { FilmDetails } from './components/FilmDetails';\n\nimport { store } from './store/reducers';\n\nimport {\n  addNewFilm,\n} from './store/action';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=2f4a38c9&t=';\n\nexport class App extends Component {\n  state = {\n    searchWord: '',\n    error: null,\n  };\n\n  handleAddFilm = ({\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n  }) => {\n    store.dispatch(addNewFilm({\n      id: shortid.generate(),\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n    }));\n\n    this.forceUpdate();\n  };\n\n  handleSearchChange = ({ target }) => this.setState({\n    searchWord: target.value,\n    error: null,\n  });\n\n  searchFilm = async(searchWord) => {\n    try {\n      const filmResponce = await fetch(`${API_URL}${searchWord}`);\n      const {\n        Title,\n        Plot,\n        Poster,\n        Website,\n        imdbID,\n      } = await filmResponce.json();\n\n      if (imdbID === undefined) {\n        throw new Error('Film not found');\n      }\n\n      store.dispatch(addNewFilm({\n        id: imdbID,\n        title: Title,\n        description: Plot,\n        imgUrl: Poster,\n        imdbUrl: Website,\n      }));\n\n      this.setState({ error: null })\n      this.forceUpdate();\n    } catch (error) {\n      this.setState({ error: error.message })\n      console.error(error.message);\n    }\n  };\n\n  render() {\n    const { filmsList, searchWord, error } = this.state;\n\n    return (\n      <BrowserRouter>\n        <div className=\"page\">\n          <div className=\"content\">\n            <div className=\"box\">\n              <FormField\n                error={error}\n                value={searchWord}\n                name=\"searchWord\"\n                placeholder=\"Type search word\"\n                label=\"Search film\"\n                onChange={this.handleSearchChange}\n              />\n              <button\n                onClick={() => this.searchFilm(searchWord)}\n                type=\"button\"\n                className=\"button is-primary\"\n              >\n                Search film\n              </button>\n            </div>\n\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={() => (\n                  <FilmsList />\n                )}\n              />\n              <Route\n                exact\n                path=\"/film/:id\"\n                render={({ match }) => {\n                  const film = filmsList\n                    .find(f => String(f.id) === match.params.id);\n\n                  return (\n                    <FilmDetails {...film} />\n                  );\n                }}\n              />\n            </Switch>\n          </div>\n          <div className=\"sidebar\">\n            <NewFilm onAdd={this.handleAddFilm} />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}